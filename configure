#!/usr/bin/env bash

set -e

trap 'echo -e "\n\nConfiguration failed\n\n" >&2' ERR

# Default configuration values
declare -A CONFIG

# Installation prefix
CONFIG[PREFIX]="/usr/local"

# Build with debug logging and symbols. debug logging consists of an
# error-message prefixed with "XNVME_DEBUG: " printed to stderr on all functions
# returning errors

# Turn off for performance testing and normal usage
CONFIG[DEBUG]=OFF

function check_dir() {
	arg="$1"
	dir="${arg#*=}"
	if [ ! -d "$dir" ]; then
		echo "$arg: directory not found"
		exit 1
	fi
}

function usage()
{
	echo "'configure' configures XNVME to compile on supported platforms."
	echo ""
	echo "Usage: ./configure [OPTION] ..."
	echo ""
	echo "Defaults for the options are specified in brackets."
	echo ""
	echo "General:"
	echo " -h, --help                Display this help and exit"
	echo ""
	echo " --prefix=path             Configure installation prefix (default: /usr/local)"
	echo ""
	echo " --enable-debug            Configure for debug builds"
	echo ""
	echo "Environment variables:"
	echo ""
	echo "CC                         C compiler"
	echo "CFLAGS                     C compiler flags"
	echo "LD                         Linker"
	echo "LDFLAGS                    Linker flags"
	echo "DESTDIR                    Destination for 'make install'"
	echo ""

	echo "Default configuration on current system:"

	local jazz=""
	for key in "${!CONFIG[@]}"; do
		jazz="$jazz\n  $key: ${CONFIG[$key]}"
	done

	echo -e $jazz | sort
}

for i in "$@"; do
	case "$i" in
		-h|--help)
			usage
			exit 0
			;;

		--prefix=*)
			CONFIG[PREFIX]="${i#*=}"
			;;

		--build=*)
			;;
		--includedir=*)
			;;
		--mandir=*)
			;;
		--infodir=*)
			;;
		--sysconfdir=*)
			;;
		--localstatedir=*)
			;;
		--disable-silent-rules)
			;;
		--libdir=*)
			;;
		--libexecdir=*)
			;;
		--disable-maintainer-mode)
			;;
		--disable-dependency-tracking)
			;;
		--runstatedir=*)
			;;

		--enable-debug)
			CONFIG[DEBUG]=ON
			;;
		--disable-debug)
			CONFIG[DEBUG]=OFF
			;;

		--)
			break
			;;
		*)
			echo "Unrecognized option $i"
			usage
			exit 1
	esac
done

meson --version || (echo "\n** Please install 'meson' **\n" && exit 1)

MESON_OPTS=""
MESON_OPTS="$MESON_OPTS --prefix=${CONFIG[PREFIX]}"

BUILD_DIR="builddir"
BUILD_TYPE="debug"

if [[ "${CONFIG[DEBUG]}" == "OFF" ]]; then
	BUILD_TYPE="release"
fi

echo "meson Options: '$MESON_OPTS'"

meson setup ${BUILD_DIR} \
	--prefix ${CONFIG[PREFIX]} \
	--buildtype ${BUILD_TYPE}

echo ""
echo "---=={[ Configured ]}==---"
echo ""
echo "Type 'make' to build."

exit 0
